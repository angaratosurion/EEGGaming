<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__mountain_8cs_source" xml:lang="en-US">
<title>Mountain.cs</title>
<indexterm><primary>BlinkBird/Code/Mountain.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__mountain_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Godot;
<anchor xml:id="__mountain_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__mountain_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>static&#32;System.Formats.Asn1.AsnWriter;
<anchor xml:id="__mountain_8cs_source_1l00004"/>00004 
<anchor xml:id="__mountain_8cs_source_1l00005"/><link linkend="_class_mountain">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis><link linkend="_class_mountain">Mountain</link>&#32;:&#32;Sprite2D
<anchor xml:id="__mountain_8cs_source_1l00006"/>00006 {
<anchor xml:id="__mountain_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Called&#32;when&#32;the&#32;node&#32;enters&#32;the&#32;scene&#32;tree&#32;for&#32;the&#32;first&#32;time.</emphasis>
<anchor xml:id="__mountain_8cs_source_1l00008"/>00008 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;&#32;&#32;&#32;PackedScene&#32;packedScene&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__mountain_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;
<anchor xml:id="__mountain_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_Ready()
<anchor xml:id="__mountain_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__mountain_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//timer&#32;=&#32;World.timer;//&#32;(Timer)this.GetNode&lt;Timer&gt;(&quot;/root/World/TmrTimer&quot;);</emphasis>
<anchor xml:id="__mountain_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__mountain_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;}
<anchor xml:id="__mountain_8cs_source_1l00015"/>00015 
<anchor xml:id="__mountain_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Called&#32;every&#32;frame.&#32;&apos;delta&apos;&#32;is&#32;the&#32;elapsed&#32;time&#32;since&#32;the&#32;previous&#32;frame.</emphasis>
<anchor xml:id="__mountain_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">//Timer&#32;timer;</emphasis>
<anchor xml:id="__mountain_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;
<anchor xml:id="__mountain_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_Process(<emphasis role="keywordtype">double</emphasis>&#32;delta)
<anchor xml:id="__mountain_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__mountain_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__mountain_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__mountain_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_world">World</link>.player&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_world">World</link>.player.Visible==<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__mountain_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__mountain_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GetRect().HasPoint(ToLocal(<link linkend="_class_world">World</link>.player.Position))&#32;&amp;&amp;&#32;<link linkend="_class_world">World</link>.timer!=<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__mountain_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__mountain_8cs_source_1l00027"/>00027 
<anchor xml:id="__mountain_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_world">World</link>.player.Hide();
<anchor xml:id="__mountain_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.packedScene&#32;=&#32;(PackedScene)GD.Load(<emphasis role="stringliteral">&quot;res://Scenes/GameOver.tscn&quot;</emphasis>);
<anchor xml:id="__mountain_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Window&#32;sprite&#32;=&#32;(Window)this.packedScene.Instantiate();
<anchor xml:id="__mountain_8cs_source_1l00031"/>00031 
<anchor xml:id="__mountain_8cs_source_1l00032"/>00032 
<anchor xml:id="__mountain_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddSibling(sprite);
<anchor xml:id="__mountain_8cs_source_1l00034"/>00034 
<anchor xml:id="__mountain_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_world">World</link>.timer.Stop();
<anchor xml:id="__mountain_8cs_source_1l00036"/>00036 
<anchor xml:id="__mountain_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_menu">Menu</link>.SaveDataToDb();
<anchor xml:id="__mountain_8cs_source_1l00038"/>00038 
<anchor xml:id="__mountain_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Hide();
<anchor xml:id="__mountain_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Free();
<anchor xml:id="__mountain_8cs_source_1l00041"/>00041 
<anchor xml:id="__mountain_8cs_source_1l00042"/>00042 
<anchor xml:id="__mountain_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;GetRect().End.X&lt;=&#32;<link linkend="_class_world">World</link>.player.Position.X)
<anchor xml:id="__mountain_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__mountain_8cs_source_1l00045"/>00045 
<anchor xml:id="__mountain_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;score&#32;=&#32;World.Score&#32;+&#32;(World.RAISESCOREBY&#32;/&#32;(40&#32;*&#32;30));
<anchor xml:id="__mountain_8cs_source_1l00047"/>00047 
<anchor xml:id="__mountain_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;World.Score&#32;=&#32;&#32;(double)Math.Round(score,3);
<anchor xml:id="__mountain_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__mountain_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__mountain_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;
<anchor xml:id="__mountain_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__mountain_8cs_source_1l00053"/>00053 
<anchor xml:id="__mountain_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__mountain_8cs_source_1l00055"/>00055 
<anchor xml:id="__mountain_8cs_source_1l00056"/>00056 }
</programlisting></section>
